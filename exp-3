# Import necessary modules
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris
import random

# Loading data
data_iris = load_iris()

# To get list of target names
label_target = data_iris.target_names
print()
print("Sample Data from Iris Dataset")
print("*"*30)

# to display the sample data from the iris dataset
for i in range(10):
    rn = random.randint(0, 149)  # Corrected the upper bound of random integer
    print(data_iris.data[rn], "===>", label_target[data_iris.target[rn]])

# Create feature and target arrays
X = data_iris.data
y = data_iris.target

# Split into training and test set
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.3, random_state=1)

print("The Training dataset length: ", len(X_train))
print("The Testing dataset length: ", len(X_test))

try:
    nn = int(input("Enter number of neighbors: "))
    knn = KNeighborsClassifier(nn)
    knn.fit(X_train, y_train)
    
    # to display the score
    print("The Score is:", knn.score(X_test, y_test))
    
    # To get test data from the user
    test_data = input("Enter Test Data (separated by commas): ").split(",")
    test_data = [float(val.strip()) for val in test_data]  # Convert input to float
    
    print()
    v = knn.predict([test_data])
    print("Predicted output is:", label_target[v[0]])  # Added [0] to access the first element of v
    
except ValueError:
    print("Please supply valid input...")
except Exception as e:
    print("An error occurred:", e)
